{"version":3,"sources":["Button.js","Display.js","utils/buttons.js","utils/helpers.js","utils/calculate.js","App.js","serviceWorker.js","index.js"],"names":["Button","this","props","button","value","type","key","keyCode","containsDecimal","currentVal","includes","id","className","onClick","handleClick","disabled","data-key-code","React","Component","Display","displayFormula","buttons","activeClass","selector","classList","add","setTimeout","remove","calculate","currentNumber","prevNumber","operator","result","parseFloat","toString","console","log","operations","App","state","prevVal","tempResult","operation","useEqual","handleKey","e","forEach","inputConditional","calcButton","document","querySelector","currentTarget","handleDisplay","preventDefault","handleNumber","handleOperation","handleEqual","handleClear","setState","nextValue","addEventListener","removeEventListener","map","idx","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fe8552c.chunk.js","sourcesContent":["import React from 'react'\n\nclass Button extends React.Component {\n\n  render() {\n    const { value, type, key, keyCode } = this.props.button\n    const { currentVal } = this.props\n    let containsDecimal = currentVal.includes('.') && key === 'decimal'\n    return (\n      <button\n        id={key}\n        className={type}\n        value={value}\n        onClick={this.props.handleClick}\n        disabled={containsDecimal}\n        data-key-code={keyCode}\n      >\n        {value}\n      </button>\n    )\n  }\n}\n\nexport default Button\n","import React from 'react'\n\nexport class Display extends React.Component {\n  render() {\n    const { displayFormula } = this.props\n    return (\n      <div id=\"display\" className=\"calculator-display\">\n        <div className=\"display-inner\">\n          {displayFormula}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Display\n","export const buttons = [\n  {\n    value: '',\n    type: 'blank',\n    key: '',\n  },\n  {\n    value: '',\n    type: 'blank',\n    key: ''\n  },\n  {\n    value: '',\n    type: 'blank',\n    key: ''\n  },\n  {\n    value: 'C',\n    type: 'operation',\n    key: 'clear',\n    keyCode: 46,\n  },\n  {\n    value: '7',\n    type: 'number',\n    key: 'seven',\n    keyCode: 103,\n  },\n  {\n    value: '8',\n    type: 'number',\n    key: 'eight',\n    keyCode: 104,\n  },\n  {\n    value: '9',\n    type: 'number',\n    key: 'nine',\n    keyCode: 105,\n  },\n  {\n    value: '/',\n    type: 'operation',\n    key: 'divide',\n    keyCode: 111,\n\n  },\n  {\n    value: '4',\n    type: 'number',\n    key: 'four',\n    keyCode: 100,\n  },\n  {\n    value: '5',\n    type: 'number',\n    key: 'five',\n    keyCode: 101,\n  },\n  {\n    value: '6',\n    type: 'number',\n    key: 'six',\n    keyCode: 102,\n  },\n  {\n    value: 'x',\n    type: 'operation',\n    key: 'multiply',\n    keyCode: 106,\n  },\n  {\n    value: '1',\n    type: 'number',\n    key: 'one',\n    keyCode: 97,\n  },\n  {\n    value: '2',\n    type: 'number',\n    key: 'two',\n    keyCode: 98,\n  },\n  {\n    value: '3',\n    type: 'number',\n    key: 'three',\n    keyCode: 99,\n  },\n  {\n    value: '-',\n    type: 'operation',\n    key: 'subtract',\n    keyCode: 109,\n  },\n  {\n    value: '0',\n    type: 'number',\n    key: 'zero',\n    keyCode: 96,\n  },\n  {\n    value: '.',\n    type: 'number',\n    key: 'decimal',\n    keyCode: 110,\n  },\n  {\n    value: '=',\n    type: 'operation',\n    key: 'equals',\n    keyCode: 13,\n  },\n  {\n    value: '+',\n    type: 'operation',\n    key: 'add',\n    keyCode: 107,\n  },\n]","export const activeClass = (selector) => {\n  selector.classList.add('active')\n  setTimeout(() => {\n    selector.classList.remove('active')\n  }, 200);\n}","const calculate = (currentNumber, prevNumber, operator) => {\n  let result = null\n  switch (operator) {\n    case '+':\n      result = (parseFloat(prevNumber) + parseFloat(currentNumber)).toString()\n      break;\n    case '-':\n      result = (parseFloat(prevNumber) - parseFloat(currentNumber)).toString()\n      break;\n    case 'x':\n      result = (parseFloat(prevNumber) * parseFloat(currentNumber)).toString()\n      break;\n    case '/':\n      result = (parseFloat(prevNumber) / parseFloat(currentNumber)).toString()\n      break;\n    default:\n      console.log('error')\n  }\n  return result\n}\n\nexport default calculate","import React from 'react';\nimport './App.scss';\nimport Button from './Button'\nimport Display from './Display'\nimport { buttons } from './utils/buttons'\nimport { activeClass } from './utils/helpers'\nimport calculate from './utils/calculate'\n\nconst operations = ['/', 'x', '-', '+']\n\n\nclass App extends React.Component {\n  state = {\n    currentVal: '',\n    prevVal: '',\n    tempResult: '',\n    displayFormula: '0',\n    operation: '',\n    useEqual: false\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKey, false)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('keydown', this.handleKey, false)\n  }\n\n  handleKey = (e) => {\n    buttons.forEach((button) => {\n      if(e.keyCode === button.keyCode){\n        this.inputConditional(button.value, e)\n        const calcButton = document.querySelector(`#${button.key}`)\n        activeClass(calcButton)\n      } \n    })\n  }\n\n  handleClick = (e) => {\n    this.inputConditional(e.currentTarget.value)\n    activeClass(e.currentTarget)\n  }\n\n  inputConditional = (value, e) => {\n    this.handleDisplay(value)\n\n    if (operations.includes(value)) {\n      e && e.preventDefault()\n      if (value === '-' && this.state.currentVal === '') {\n        this.handleNumber(value)\n      } else {\n        this.handleOperation(value)\n      }\n    } else if (value === '=') {\n      this.handleEqual()\n    } else if (value === 'C') {\n      this.handleClear()\n    } else {\n      this.handleNumber(value)\n    }\n  }\n\n  handleDisplay = (value) => {\n    if(value === \"=\") return false;\n    const { displayFormula } = this.state\n    if (displayFormula !== '0') {\n      this.setState({\n        displayFormula: this.state.displayFormula + value\n      })\n    } else {\n      this.setState({\n        displayFormula: value\n      })\n    }\n  }\n\n  handleNumber = (value) => {\n    const { currentVal } = this.state\n    const nextValue = currentVal + value\n\n    this.setState({\n      currentVal: nextValue,\n    })\n  }\n\n  handleOperation = (operator) => {\n    const { currentVal, prevVal, operation, tempResult, useEqual } = this.state\n    if (currentVal && prevVal && !useEqual && currentVal !== '-') {\n      const prevNumber = tempResult || prevVal\n      const result = calculate(currentVal, prevNumber, operation)\n      this.setState({\n        tempResult: result\n      })\n    }\n    \n    if(currentVal === '-') this.setState({ currentVal: ''})\n    \n    if(currentVal && currentVal !== '-') {\n      this.setState({\n        currentVal: '',\n        prevVal: currentVal,\n      })\n    }\n\n    this.setState({\n      operation: operator,\n      useEqual: false\n    })\n  }\n\n  handleEqual = () => {\n    const { currentVal, prevVal, operation, tempResult, useEqual } = this.state\n\n    if (useEqual || currentVal ==='' || prevVal === '') return false\n    \n    const prevNumber = tempResult || prevVal\n    const result = calculate(currentVal, prevNumber, operation)\n    // console.log({ currentVal, prevNumber, prevVal, operation, result })\n    this.setState({\n      currentVal: result,\n      prevVal: currentVal,\n      tempResult: result,\n      displayFormula: result,\n      useEqual: true,\n    })\n  }\n\n  handleClear = () => {\n    this.setState({\n      currentVal: '',\n      prevVal: '',\n      displayFormula: '0',\n      tempResult: '',\n      operation: '',\n      useEqual: false,\n    })\n  }\n\n  render() {\n    const { displayFormula, currentVal } = this.state\n    return (\n      <div className=\"calculator\">\n        <Display displayFormula={displayFormula} />\n        <div className=\"button-wrapper\">\n          {buttons.map((button, idx) => (\n            <Button key={idx} button={button} handleClick={this.handleClick} currentVal={currentVal} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}